$(document).ready(function () {
    //Ocultamos capa resultados y último intento
    $('.resultados').hide();
    $('.ultimo_intento').hide();

    $(".ejercicioVF .opcionesRadio input[type=radio], .ejercicioSC input, .ejercicioAss input").change(function () {
        var a = $(this).attr("data-result");
        // buscamos la pregunta
            r = $(this);
        while (r.attr("data-preg") == undefined)
            r = r.parent();
            r = r.attr("data-preg");
        var o = $(this).attr("data-option") != undefined ? $(this).attr("data-option"): r;
        
        // buscamos el ejercicio
        var e = $(this);
        while (!e.hasClass("todoEjercicios"))
            e = e.parent();
        t(e);

        if( $(this).attr('type') == 'radio')
            f[o] = $(this).attr("data-option") != undefined ? o : a;
        else{
            n = $(this).is(":checked");
            n ? ("success" == a || e.hasClass('ejercicioAss') ? ($(this).prop("checked", !0), f[o] = o) : ($(this).prop("checked", !1), f[o] = !1), html = $(e).find(".alert[data-mensaje=" + a + "][data-preg=" + r + "]").html(), h(html, a)) : f[o] = !1;
        }

        if($(this).is(":checked")){
            html = $(e).find(".alert[data-mensaje=" + a + "][data-preg=" + r + "]").html();
            h(html, a);
        }
    });
    
    $(".ejercicioVF button#explicacion, .ejercicioSC button#explicacion").click(function () {
        var a = $(this).parent().parent().parent();
        t(a), html = $(a).find(".alert[data-mensaje=explicacion]").html(), h(html, "info")
    });
    
    $(".ejercicioVF button#solucion, .ejercicioSC button#solucion, .ejercicioAss  button#solucion").click(function () {
        //_orientationHandler(false);
        var a = $(this);
        while (!a.hasClass("todoEjercicios"))
            a = a.parent();
            
        t(a);
        $(a).find("button#explicacion").show();
        $(a).find("button#explicacion").removeClass('hide');
        
        $(a).find("div[data-preg] input[type=checkbox]").each(function () {
            $(this).prop("checked", !1)
        });
        
        $(a).find("input[type=radio],input[type=checkbox]").each(function () {
            "success" == $(this).attr("data-result") && $(this).prop("checked", !0)
        })
    });

    function existeElemento(clase) {
        var salida = false;
        var elementos = $('.' + clase);
        if(elementos.length > 0) salida = true;
        var elementos = $('#' + clase);
        if(elementos.length > 0) salida = true;
        return salida;
    }


    
     $(".ejercicioVF button#comprobar, .ejercicioSC button#comprobar, .ejercicioAss  button#comprobar").click(function () {
        //_orientationHandler(false);

        var a = $(this);
        while (!a.hasClass("todoEjercicios"))
            a = a.parent();

        /* ---- CADMO ---------
            Nuevas funcionalidades:
            - Debemos enviar la puntuación del intento, ya que tiene que quedar reflejado en plataforma.
            - Debemos tener en cuenta que puede existir un numero variable de intentos, por defecto serán 2
            
            - Una vez superado el número de intentos máximo 
            - Ocultamos botón de borrar
        */
        //mostramos boton descripcion. Si contiene texto...
        $(a).find("button#comprobar").parent().hide();
        var aciertos = 0;
        /*var totales =  $(".ejercicioSC_pregunta :radio[rel=1]").length; Da danger si hay más de una correcta*/ 
        var totales =  0;
        $(a).find(".ejercicio.question").filter(':visible').each(function(){
            /*totales += $(this).find(":radio[data-result='success']:checked").length + 
                       $(this).find(":checkbox[data-result='success']").length;*/
            totales++;
        });
        
        $(a).find(".question .statement").each(function(){
            $(this).find("span[data-togle='feedBackText']").remove();
        });
        
        $(a).find("fieldSet#FSfeedBack").each(function(){
            //$(this).remove();
        });

        $(a).find(".ejercicio.question").each(function(){
            var question = $(this).find('.statement');
            var check = $(this).find(":radio").length > 0 ? 
                $(this).find(":radio[data-result='success']:checked").length > 0 :
                $(this).find(":checkbox[data-result='success']:checked").length == $(this).find(":checkbox[data-result='success']").length &&
                $(this).find(":checkbox[data-result='fail']:checked").length == 0;
            
            var icon;
            if(check){
                icon='check';
            } else {
                icon='times'
            }
            question.prepend('<span data-togle="feedBackText" class="feedBack"><i class="fa fa-'+ icon +'"></i></span>');
            $(this).find('.single_choice :radio:checked, .single_choice :checkbox:checked').each(function(){
                aciertos += $(this).attr('data-result') == "success" ? 1 : 0;
            });
        });
        
        /*var mastery_score = !isNaN(masteryScore) && masteryScore != "" ? parseInt(masteryScore) : 50; // luego la tomaremos de la plataforma
        notaCorte = mastery_score;*/
        //var valor_score_anterior = API != null ? !isNaN(scoreRaw) && scoreRaw != "" ? parseInt(scoreRaw) : 0 : 0;
        var score_raw = aciertos / totales * 100;
            if(API != null)
            {
                evaluation.clearAnswerQuestion();
            }
            //Obtenemos as preguntas
            $('div.single_choice[data-preg]').each(function () {
                //Para las visibles guardamos la respuesta del alumno
                if ($(this).is(":visible")){
                    var radioOptionSuccess = $(this).find('[data-result=success]');
                    var correctAnswer = $(radioOptionSuccess).attr('data-option');
                    correctAnswer = correctAnswer.substring(correctAnswer.lastIndexOf("_")+1);
                    var userAnswer = $(this).find('input[type="radio"]:checked').attr('data-option');
                    if (userAnswer==undefined){
                        userAnswer=-1;
                    }else{
                        userAnswer = userAnswer.substring(userAnswer.lastIndexOf("_")+1);
                    }

                    if(API!=null)
                    {
                        evaluation.setAnswerQuestion($(this).attr('data-preg'),userAnswer,correctAnswer);
                    }
                }
            });
            //Intentos y guardar evaluacion
            if(API!=null)
            {
                evaluation.saveEvaluation();
                var jsonData = scorm.getSuspendData();
                jsonData.i=nIntentos+1;
                scorm.setSuspendData(jsonData);
            }
        
        var feedBackText = null;
        
            //var contentAsset = $.browser.msie ? $("#QuestionAsset") : $("#QuestionAsset");
          
                $('.btn_repetir').click(function () {
                    //_orientationHandler(false);
                    //Eliminamos marcas del ejercicio
                    $(".question .statement").each(function(){
                         $(this).find("span[data-togle='feedBackText']").remove();
                    });
                    //Activamos los ejercicios
                    $(".ejercicio.question :radio, .ejercicio.question :checkbox").prop('disabled', false);
                    //Borramos opciones seleccionadas
                    $("div[data-preg] input[type=radio]").each(function () {
                        $(this).prop("checked", !1), f = {}
                    })

                    //Mostramos botonera ejercicios
                    $('.botoneraEjercicios').show()
                    $('.resultados').hide();
                });
                $('.intNota').text(score_raw);
                $('.resultados').show();

                //if(++nIntentos == maxIntentos) fieldSet.append('<div style="font-weight:bold">Has llegado al último intento. La próxima vez que accedas al test no podrás guardar la puntuación.</div>');
                if(++nIntentos == maxIntentos){
                    $('.ultimo_intento').show();
                }
        
        $(a).find(".ejercicio.question :radio, .ejercicio.question :checkbox").prop('disabled', true);

        $("html, body").animate({ scrollTop: $(document).height() }, 0);

        //
        //mostramos boton descripcion. Si contiene texto...
        /*if($.browser.msie ? textoexplicacion=$('#texto_explicativo').text().length > 1 : textoexplicacion=$('#texto_explicativo').text().trim().length > 1)
            btn_explicacion.fadeIn('slow');*/
    

    });
 
 
    $(".ejercicioVF button#turespuesta, .ejercicioSC button#turespuesta, .ejercicioAss button#turespuesta").click(function () {
        //_orientationHandler(false);
        var a = $(this);
        while (!a.hasClass("todoEjercicios"))
            a = a.parent();
            
        t(a);
        
        $(a).find("div[data-preg] input[type=radio]").each(function () {
            $(this).prop("checked", !1)
        });

        $(a).find("div[data-preg] input[type=checkbox]").each(function () {
            $(this).prop("checked", !1)
        });
        var search_data = $(a).find("input[type=radio]").attr("data-option") != undefined ? "data-option" : "data-result";
        for (var r in f){
            $(a).find((search_data == 'data-option' ? "input" : "div[data-preg=" + r + "] input[type=radio]" ) + "[" + search_data + "=" + f[r] + "]").prop("checked", !0)
        }
    });
    
    $(".ejercicioVF button#borrar, .ejercicioSC button#borrar, .ejercicioAss button#borrar").click(function () {
        //_orientationHandler(false);
        var r = $(this);
        while (!r.hasClass("todoEjercicios"))
            r = r.parent();
            
        a(r);
        t(r);
        
        $(r).find("div[data-preg] input[type=checkbox]").each(function () {
            $(this).prop("checked", !1), f = {}
        })

        $(r).find("div[data-preg] input[type=radio]").each(function () {
            $(this).prop("checked", !1), f = {}
        })

    });

    function _orientationHandler(ev){
        if (/(iPhone|iPod|iPad|BlackBerry|Android)/.test(navigator.userAgent)){
            scrollerHeight = parseInt(parent.$('#scroller').height()) > 0 ? parent.$('#scroller').height() : scrollerHeight;
            if(ev != false) parent.$('#scroller').css({'height': (scrollerHeight - 1) + 'px'});
            clearTimeout(oc_timer);
            oc_timer = setTimeout(function () {
                if (/(iPhone|iPod|iPad|BlackBerry|Android)/.test(navigator.userAgent)){
                    var oldPadding = $('#footer').css('padding');
                        $('#footer').css({padding: '0'});
                        clearTimeout(oc_timer);
                        oc_timer = setTimeout(function () {
                            $('#footer').css({padding: oldPadding});
                    }, 200);
                    if(ev != false) parent.$('#scroller').css({'height': scrollerHeight + 'px'});
                }
            }, 100);
        }    
        // Borramos elementos que se han podido quedar al rotar el 'device'
        $(".ui-draggable-dragging").remove();
        
        if(typeof(ev) == 'undefined')
            logConsole("ROTATE DEVICE['Init.js']:","\torientation change [" + window.orientation + "]");
    }
    
    function t(t) {
        $(t).find(".alert").hide()
    }

    function a(t) {
        $(t).find("button#explicacion").hide();
    }

    function r(a) {
        t(a), $(a).find("button#explicacion").show(), $(a).find("button#explicacion").removeClass('hide'), $(a).find("select[data-combo]").each(function () {
            var t = $(this).find($("option[data-solucion]")).attr("value");
            $(this).val(t)
        }), a.find(".control-group").each(function () {
            $(this).removeClass("danger"), $(this).removeClass("success")
        })
    }
    
    function h(t, a) {
        switch (titulo = "", a) {
        case "info":
            titulo = "Explicación";
            break;
        case "success":
            titulo = "Respuesta correcta";
            break;
        case "danger":
            titulo = "Respuesta incorrecta";
            break;
        case "fail":
            titulo = "Respuesta incorrecta", a = "danger";
            break;
        case "sol":
            titulo = "Solución", a = "info"
        }
        if(typeof(t) != 'undefined')
            t = t.replace('<button type="button" class="close">×</button>', ""), t = t.replace('<button type="button" class="close" data-dismiss="alert">×</button>', ""), $.magnificPopup.open({
                items: {
                    src: '<div id="test-popup" class="mfp-show caja-popup ejercicios"><p class="negrita alert-' + a + '">' + titulo + "</p>" + t + "</div>",
                    type: "inline"
                }
            })
    }
    
    var f = {};


    //Programación de una evaluación
    var API = null;
    var scorm  = null;
    var evaluation = null;
    var parameters = null;
    var nIntentos  = 1;
    try {
        if (typeof(window.parent.parent.parent.scorm)!="undefined"){
            API = window.parent.parent.parent.scorm.API;
            scorm = window.parent.parent.parent.scorm;
            evaluation = window.parent.parent.parent.evaluation;
            parameters = window.parent.parent.parent.courseConfig;
        }
    } catch (e) {}
    
    var maxIntentos  = parameters.intents;
    if (API != null){
        nIntentos = scorm.getSuspendData().i;
    }
    //var nIntentos           = API != null ? !isNaN(objectives_count) && objectives_count != "" ? parseInt(objectives_count) : 0 : 0;
    
    if(nIntentos >= maxIntentos && maxIntentos!=0){
        $('.botoneraEjercicios').remove();
    }

    $(".elcuerpo[data-search='assessment']").find('.ejercicioSC').removeClass('ejercicioSC').addClass('ejercicioAss');
    var objectiveID = $("#elcuerpo[data-search*='assessment']").length > 0 ? "EVAL-FINAL" : null;

     if(objectiveID != null && $('button#compribar').length == 0){
        var klon = $('button#solucion');
            klon.clone().attr('id', 'comprobar').insertAfter( klon );
            
            //klon.clone().attr('id', 'comprobar').get(0).text(' Comprobar').insertAfter( klon );
            $('button#comprobar').contents().last()[0].textContent = ' Comprobar';

        $('button#solucion').hide('slow');
        $('button#turespuesta').hide('slow');
    }

    if(existeElemento('ejercicioAss')) {
       // randomizamos las cajas
        $('.ejercicioAss').each(function(){
            // get current ul
            var $ul = $(this).children('.preguntasAss,.preguntasSC');
            var questionNum = 0;
            // get array of list items in current ul
            var $liArr = $ul.children('.single_choice.question');// $ul.children('.seleccionable');
            // sort array of list items in current ul randomly
            $liArr.sort(function(a,b){
                // Get a random number between 0 and 10
                var temp = parseInt( Math.random()*10 );
                // Get 1 or 0, whether temp is odd or even
                //var isOddOrEven = temp%2;
                // Get +1 or -1, whether temp greater or smaller than 5
                var isPosOrNeg = temp > 5 ? 1 : -1;
                // Return -1, 0, or +1
                return( isPosOrNeg );
            })
            // append list items to ul
            .appendTo($ul);
            
            $(this).attr('numOfQuestions', $(this).attr('numOfQuestions') != undefined ? $(this).attr('numOfQuestions') : 10) != undefined;
            
            if($(this).attr('numOfQuestions') != undefined){
                var questionNum = 0;
                var numOfQuestions = $(this).attr('numOfQuestions');
                $(this).find('.single_choice.question').each(function(){
                    if(++questionNum > numOfQuestions)
                        $(this).css('display', 'none');
                })
            };

        });
    }
});